name: Retraining The Model

on:
  schedule:
    - cron: '0 15 * * 0' # Every Sunday at 3 PM UTC
  workflow_dispatch:

jobs:
  retraining_model_every_week:
    runs-on: ubuntu-latest
    
    steps: 
      - uses: actions/checkout@v2

      - name: Install Miniconda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          echo "$HOME/miniconda/bin" >> $GITHUB_PATH
          source $HOME/miniconda/bin/activate
          conda init bash
          source ~/.bashrc

      - name: Create and activate conda environment
        run: |
          conda create --name airquality python=3.8 -y
          source $HOME/miniconda/bin/activate
          conda activate airquality
          conda install -n airquality -c conda-forge prophet pandas altair streamlit numpy -y

      - name: Install additional dependencies
        run: |
          source $HOME/miniconda/bin/activate
          conda activate airquality
          pip install -r requirements.txt

      - name: Run data update script
        run: |
          source $HOME/miniconda/bin/activate
          conda activate airquality
          python data_capture.py

      - name: Commit and push changes
        run: |
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global user.name "foxy-dev1"
          git add .
          git commit -m "Weekly update"
          git push origin main

      - name: Deploy Streamlit app
        env:
          STREAMLIT_EMAIL: ${{ secrets.STREAMLIT_EMAIL }}
          STREAMLIT_PASSWORD: ${{ secrets.STREAMLIT_PASSWORD }}
        run: |
          source $HOME/miniconda/bin/activate
          conda activate airquality
          streamlit deploy app.py --email $STREAMLIT_EMAIL --password $STREAMLIT_PASSWORD --sharing-name air-quality-naive-forecast
